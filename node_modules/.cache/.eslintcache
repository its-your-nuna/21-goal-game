[{"/home/aidana/Game/21goal/src/index.js":"1","/home/aidana/Game/21goal/src/App.js":"2","/home/aidana/Game/21goal/src/components/MyListedItems.js":"3","/home/aidana/Game/21goal/src/components/marketplace/Home.js":"4","/home/aidana/Game/21goal/src/components/navbar/Navbar.jsx":"5","/home/aidana/Game/21goal/src/components/MyPurchases.js":"6","/home/aidana/Game/21goal/src/components/main/MainPage.js":"7","/home/aidana/Game/21goal/src/components/Context.js":"8","/home/aidana/Game/21goal/src/components/main/CountDownTimer.js":"9","/home/aidana/Game/21goal/src/components/loading/Loading.jsx":"10","/home/aidana/Game/21goal/src/components/stair/Stair.js":"11","/home/aidana/Game/21goal/src/components/chibi/Chibi.jsx":"12","/home/aidana/Game/21goal/src/components/tasks/Tasks.jsx":"13","/home/aidana/Game/21goal/src/components/modal/Modal.jsx":"14"},{"size":257,"mtime":1657183494985,"results":"15","hashOfConfig":"16"},{"size":2876,"mtime":1660081341142,"results":"17","hashOfConfig":"16"},{"size":3030,"mtime":1659462141501,"results":"18","hashOfConfig":"16"},{"size":4013,"mtime":1660075448699,"results":"19","hashOfConfig":"16"},{"size":1997,"mtime":1660079235469,"results":"20","hashOfConfig":"16"},{"size":2515,"mtime":1660065070249,"results":"21","hashOfConfig":"16"},{"size":3547,"mtime":1659492070140,"results":"22","hashOfConfig":"16"},{"size":85,"mtime":1657533346279,"results":"23","hashOfConfig":"16"},{"size":1154,"mtime":1658308362193,"results":"24","hashOfConfig":"16"},{"size":391,"mtime":1659675776083,"results":"25","hashOfConfig":"16"},{"size":1637,"mtime":1659616474527,"results":"26","hashOfConfig":"16"},{"size":1513,"mtime":1659704711558,"results":"27","hashOfConfig":"16"},{"size":4469,"mtime":1660080560619,"results":"28","hashOfConfig":"16"},{"size":737,"mtime":1659468046732,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"p8lsoa",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/aidana/Game/21goal/src/index.js",["78"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport $ from 'jquery';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n",[],"/home/aidana/Game/21goal/src/App.js",["79","80","81","82"],[],"/home/aidana/Game/21goal/src/components/MyListedItems.js",["83"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Recieved {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [listedItems, setListedItems] = useState([])\n  const [soldItems, setSoldItems] = useState([])\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount()\n    let listedItems = []\n    let soldItems = []\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx)\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(i.tokenId)\n        // use uri to fetch the nft metadata stored on ipfs \n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\n        // define listed item object\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: metadata.image\n        }\n        listedItems.push(item)\n        // Add listed item to sold items array if sold\n        if (i.sold) soldItems.push(item)\n      }\n    }\n    setLoading(false)\n    setListedItems(listedItems)\n    setSoldItems(soldItems)\n  }\n  useEffect(() => {\n    loadListedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ?\n        <div className=\"px-5 py-3 container\">\n            <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n            {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}","/home/aidana/Game/21goal/src/components/marketplace/Home.js",["84","85","86","87","88","89","90"],[],"/home/aidana/Game/21goal/src/components/navbar/Navbar.jsx",["91","92","93","94","95","96"],[],"/home/aidana/Game/21goal/src/components/MyPurchases.js",["97","98"],[],"/home/aidana/Game/21goal/src/components/main/MainPage.js",["99","100","101","102","103","104","105","106","107"],[],"import React, { useEffect, useRef, useState } from 'react'\nimport './main.scss'\nimport { Stair } from '../stair/Stair'\nimport { Chibi } from '../chibi/Chibi'\nimport { Tasks } from '../tasks/Tasks'\nimport { TaskContext } from '../Context'\nimport { Navigation } from '../navbar/Navbar'\nimport { ModalClass } from '../modal/Modal'\nimport { CountDownTimer } from './CountDownTimer'\nimport prize from '../../images/prize.png'\nimport box from '../../images/box.png'\n\n\nexport const MainPage = ({ count,setCount,player }) => {\n  \n  const stairsRef = useRef(null)\n  const [id, setId] = useState(0)\n  let [daysCount, setDaysCount] = useState(0)\n  const [savedDay, setSavedDay] = useState(0)\n  const [daysArray, setDaysArray] = useState([])\n  const [isClicked, setIsClicked] = useState(true)\n  const [isExpired, setIsExpired] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [tasksDone, setTasksDone] = useState(false);\n  const [modalText, setModalText] = useState(\"\")\n  const [savedTasksDone, setSavedTasksDone] = useState(true);\n  const [time,setTime] = useState(\"\")\n  useEffect(() => {\n    if (tasksDone && isExpired) {\n      setSavedDay(daysCount)\n    }\n    if (tasksDone && (savedDay === 5 || savedDay === 9 || savedDay === 15)) {\n      setCount(count += 50)\n      setModalShow(true)\n      if (savedDay === 22) {\n        setCount(count += 150)\n      }\n      setSavedTasksDone(false)\n      setModalShow(true)\n      setModalText(\"You won\" + count + \"ETC\")\n    }\n  }, [tasksDone])\n\n\n  function onload () {\n\n    var \n      timer = new CountDownTimer(10);\n\n    timer.onTick(format).onTick(restart).start();\n    function restart() {\n      if (daysCount < 21) {\n        if (this.expired()) {\n           setTimeout(function () {\n            timer.start()\n          }, 1000);\n          daysCount += 1;\n          setDaysCount(daysCount)\n          setTasksDone(false)\n          setIsExpired(true)\n        }\n\n      } else if (this.expired() && daysCount > 3) {\n        setTimeout(function () {\n          ;\n        }, 1000);\n        setDaysCount(0)\n      }\n  \n    }\n    function format(minutes, seconds) {\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      setTime( minutes + ':' + seconds);\n    }\n  };\n  \n  useEffect(()=>{\n    return ()=>{\n      onload()\n    }\n  },[])\n  \n  return (\n    <section>\n    <TaskContext.Provider value={{\n      setTasksDone,\n      setDaysCount,\n      setIsClicked,\n      setId,\n      setModalShow,\n      setModalText\n    }}>\n      <span id=\"time\"></span>\n      <Stair\n        stairsRef={stairsRef}\n        isClicked={isClicked}\n        taskDone={tasksDone}\n        savedTasksDone={savedTasksDone}\n        daysArray={daysArray}\n        id={id} />\n      <Chibi\n        player={player}\n        daysCount={daysCount}\n        savedDay={savedDay}\n        stairsRef={stairsRef}\n        tasksDone={tasksDone}\n        id={id} />\n      <Tasks\n        daysCount={daysCount}\n        tasksDone={tasksDone}\n        stairsRef={stairsRef}\n        isClicked={isClicked}\n        isExpired={isExpired}\n        id={id}\n      />\n      ${savedTasksDone && <img className='prize' src={prize} />}\n      ${savedTasksDone && <img className='prize2' src={prize} />}\n      ${savedTasksDone && <img className='prize3' src={prize} />}\n      ${savedTasksDone && <img className='box' src={box} />}\n      <ModalClass\n        show={modalShow}\n        modalText={modalText}\n        onHide={() => setModalShow(false)}\n      />\n    </TaskContext.Provider>\n    </section>\n  )\n}\n","/home/aidana/Game/21goal/src/components/Context.js",[],[],"/home/aidana/Game/21goal/src/components/main/CountDownTimer.js",[],[],"/home/aidana/Game/21goal/src/components/loading/Loading.jsx",[],[],"/home/aidana/Game/21goal/src/components/stair/Stair.js",["108","109","110","111","112","113"],[],"import React, { useEffect, useState } from 'react'\nimport './Stair.scss'\nimport { useContext } from 'react'\nimport live from '../../images/heart.png'\nimport gift from '../../images/gift.png'\nimport { TaskContext } from '../Context'\nimport { Navigation } from '../navbar/Navbar'\n\n\nexport const Stair = (props) => {\n  const { stairsRef, isClicked, taskDone, savedTasksDone } = props\n  const stairsCount = 23\n  const { setIsClicked } = useContext(TaskContext)\n  const { setId } = useContext(TaskContext)\n  const clickHeart = (i) => {\n    setId(i)\n    setIsClicked(!isClicked)\n  }\n\n\n  return (\n    <>\n      <img className='gift' src={gift} alt='image' />\n      <div className=\"stairs\" >\n        <div className={`${taskDone ? 'step-taskDone' : 'step'}`}\n          ref={stairsRef}\n          style={{ \"--j\": 1 }}>\n          <i ><img onClick={\n            () => { setIsClicked(!isClicked) }\n          }\n            style={{ width: '75px', margin: '0px' }}\n            src={live} /></i>\n          <i></i>\n        </div>\n        {\n          [...Array(stairsCount)].map((e, i) =>\n            (i !== 0) ?\n              <div className='step'\n                key={i}\n                style={{ \"--j\": i }}>\n             <i >\n                  <button onClick={\n                    () => {\n                      clickHeart(i)\n                    }\n                  }\n                  className='button live'\n                    key={i}\n                    src={live} >\n                    {i === 22 ? 'Win' : i}\n                  </button>\n                </i>\n                <i></i>\n              </div> : ''\n          )}\n      </div>\n\n    </>\n  )\n}\n","/home/aidana/Game/21goal/src/components/chibi/Chibi.jsx",["114","115"],[],"import React, {Suspense, useState, useRef, useEffect } from 'react'\nimport cat from './astro.png'\nimport { animated, useSpring } from \"react-spring\";\n\nexport const Chibi = (props) => {\n  const {stairsRef,tasksDone, daysCount,savedDay,player} = props\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height } = catRect\n  let days=savedDay-1\n\n  if(tasksDone){\n    days=daysCount -1                                                                                                                                \n  }else{\n    days=savedDay-1\n  }\n  \n  \n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '200px', height: '200px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days +150 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 60 + 'px', left: width * days + width / 2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img \n        draggable = \"false\"\n        ref={catRef}\n        src={player?player:cat}\n        alt={'cat'}\n        style={\n          springProps\n        } />\n    </>\n  )\n}\n","/home/aidana/Game/21goal/src/components/tasks/Tasks.jsx",["116","117","118","119","120","121"],[],"/home/aidana/Game/21goal/src/components/modal/Modal.jsx",[],[],{"ruleId":"122","severity":1,"message":"123","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":9},{"ruleId":"122","severity":1,"message":"126","line":15,"column":10,"nodeType":"124","messageId":"125","endLine":15,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":20,"column":10,"nodeType":"124","messageId":"125","endLine":20,"endColumn":17},{"ruleId":"122","severity":1,"message":"128","line":21,"column":10,"nodeType":"124","messageId":"125","endLine":21,"endColumn":20},{"ruleId":"122","severity":1,"message":"129","line":21,"column":21,"nodeType":"124","messageId":"125","endLine":21,"endColumn":34},{"ruleId":"130","severity":1,"message":"131","line":64,"column":6,"nodeType":"132","endLine":64,"endColumn":8,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"135","line":3,"column":26,"nodeType":"124","messageId":"125","endLine":3,"endColumn":32},{"ruleId":"122","severity":1,"message":"136","line":46,"column":10,"nodeType":"124","messageId":"125","endLine":46,"endColumn":14},{"ruleId":"122","severity":1,"message":"137","line":46,"column":16,"nodeType":"124","messageId":"125","endLine":46,"endColumn":23},{"ruleId":"122","severity":1,"message":"138","line":56,"column":11,"nodeType":"124","messageId":"125","endLine":56,"endColumn":20},{"ruleId":"122","severity":1,"message":"139","line":57,"column":9,"nodeType":"124","messageId":"125","endLine":57,"endColumn":14},{"ruleId":"122","severity":1,"message":"140","line":59,"column":11,"nodeType":"124","messageId":"125","endLine":59,"endColumn":16},{"ruleId":"122","severity":1,"message":"141","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"142","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":16},{"ruleId":"122","severity":1,"message":"135","line":7,"column":23,"nodeType":"124","messageId":"125","endLine":7,"endColumn":29},{"ruleId":"122","severity":1,"message":"143","line":7,"column":31,"nodeType":"124","messageId":"125","endLine":7,"endColumn":40},{"ruleId":"122","severity":1,"message":"144","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":24},{"ruleId":"122","severity":1,"message":"145","line":13,"column":9,"nodeType":"124","messageId":"125","endLine":13,"endColumn":22},{"ruleId":"122","severity":1,"message":"134","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"146","line":45,"column":6,"nodeType":"132","endLine":45,"endColumn":8,"suggestions":"147"},{"ruleId":"122","severity":1,"message":"148","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":20},{"ruleId":"122","severity":1,"message":"149","line":20,"column":21,"nodeType":"124","messageId":"125","endLine":20,"endColumn":33},{"ruleId":"122","severity":1,"message":"150","line":27,"column":10,"nodeType":"124","messageId":"125","endLine":27,"endColumn":14},{"ruleId":"130","severity":1,"message":"151","line":33,"column":25,"nodeType":"152","endLine":33,"endColumn":27},{"ruleId":"130","severity":1,"message":"153","line":82,"column":5,"nodeType":"132","endLine":82,"endColumn":7,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":117,"column":27,"nodeType":"157","endLine":117,"endColumn":64},{"ruleId":"155","severity":1,"message":"156","line":118,"column":27,"nodeType":"157","endLine":118,"endColumn":65},{"ruleId":"155","severity":1,"message":"156","line":119,"column":27,"nodeType":"157","endLine":119,"endColumn":65},{"ruleId":"155","severity":1,"message":"156","line":120,"column":27,"nodeType":"157","endLine":120,"endColumn":60},{"ruleId":"122","severity":1,"message":"158","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"159","line":1,"column":28,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"148","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":20},{"ruleId":"122","severity":1,"message":"160","line":11,"column":43,"nodeType":"124","messageId":"125","endLine":11,"endColumn":57},{"ruleId":"161","severity":1,"message":"162","line":23,"column":7,"nodeType":"157","endLine":23,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":28,"column":15,"nodeType":"157","endLine":32,"endColumn":26},{"ruleId":"122","severity":1,"message":"163","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"164","line":26,"column":6,"nodeType":"132","endLine":26,"endColumn":8,"suggestions":"165"},{"ruleId":"122","severity":1,"message":"166","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"167","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":16},{"ruleId":"122","severity":1,"message":"168","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":20},{"ruleId":"122","severity":1,"message":"169","line":12,"column":11,"nodeType":"124","messageId":"125","endLine":12,"endColumn":20},{"ruleId":"130","severity":1,"message":"164","line":74,"column":6,"nodeType":"132","endLine":74,"endColumn":8,"suggestions":"170"},{"ruleId":"130","severity":1,"message":"171","line":76,"column":15,"nodeType":"172","endLine":76,"endColumn":27},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadListedItems'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'ethers' is defined but never used.","'Button' is defined but never used.","'sold' is assigned a value but never used.","'setSold' is assigned a value but never used.","'itemCount' is assigned a value but never used.","'items' is assigned a value but never used.","'delay' is assigned a value but never used.","'prize' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'currentAccount' is assigned a value but never used.","'connectWallet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPurchasedItems'. Either include it or remove the dependency array.",["174"],"'Navigation' is defined but never used.","'setDaysArray' is assigned a value but never used.","'time' is assigned a value but never used.","Assignments to the 'count' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'onload'. Either include it or remove the dependency array.",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'savedTasksDone' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Suspense' is defined but never used.","React Hook useEffect has a missing dependency: 'stairsRef'. Either include it or remove the dependency array.",["176"],"'myId' is defined but never used.","'question' is defined but never used.","'ModalClass' is defined but never used.","'isExpired' is assigned a value but never used.",["177"],"Assignments to the 'element' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},"Update the dependencies array to be: [loadListedItems]",{"range":"187","text":"188"},"Update the dependencies array to be: [loadPurchasedItems]",{"range":"189","text":"190"},"Update the dependencies array to be: [onload]",{"range":"191","text":"192"},"Update the dependencies array to be: [stairsRef]",{"range":"193","text":"194"},{"range":"195","text":"194"},[2119,2121],"[loadListedItems]",[1566,1568],"[loadPurchasedItems]",[2345,2347],"[onload]",[633,635],"[stairsRef]",[1918,1920]]