{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Suspense, useState, useRef, useEffect } from 'react';\nimport cat from './astro.png';\nimport { animated, useSpring } from \"react-spring\";\nimport { useFrame, useLoader } from '@react-three/fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Scene } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GltfModel = _ref => {\n  _s();\n\n  let {\n    modelPath,\n    scale = 1,\n    position = [0, 1, 0]\n  } = _ref;\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, modelPath);\n  const [hovered, hover] = useState(false); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.y += 0.007);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n      ref: ref,\n      object: gltf.scene,\n      position: position,\n      scale: hovered ? scale * 2 : scale,\n      onPointerOver: event => hover(true),\n      onPointerOut: event => hover(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GltfModel, \"cRa4s143XH0EJ0zf7JI6002aLEY=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = GltfModel;\nexport const Chibi = props => {\n  _s2();\n\n  const {\n    stairsRef,\n    tasksDone,\n    daysCount,\n    savedDay,\n    id\n  } = props;\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    });\n  }, []);\n  const {\n    width,\n    height\n  } = catRect;\n  let days = savedDay;\n\n  if (tasksDone) {\n    days = daysCount;\n  } else {\n    days = savedDay;\n  }\n\n  const springProps = useSpring({\n    from: {\n      bottom: height * days + 'px',\n      left: width * days + 'px',\n      width: '100px',\n      height: '100px',\n      position: 'relative'\n    },\n    to: async next => {\n      await next({\n        bottom: height * days + 70 + 'px',\n        left: width * days + 'px'\n      });\n      await next({\n        bottom: height * days + 30 + 'px',\n        left: width * days + width / 2 + 'px'\n      });\n    },\n    config: {\n      duration: 500\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(animated.img, {\n      ref: catRef,\n      src: cat,\n      alt: 'cat',\n      style: springProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModelViewer, {\n      ref: catRef,\n      style: springProps,\n      modelPath: \"./scene.gltf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Chibi, \"2p7DQ4QkGUCQmJ9QgBHGSKBL2Z4=\", false, function () {\n  return [useSpring];\n});\n\n_c2 = Chibi;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GltfModel\");\n$RefreshReg$(_c2, \"Chibi\");","map":{"version":3,"names":["React","Suspense","useState","useRef","useEffect","cat","animated","useSpring","useFrame","useLoader","GLTFLoader","Canvas","OrbitControls","Scene","GltfModel","modelPath","scale","position","ref","gltf","hovered","hover","state","delta","current","rotation","y","scene","event","Chibi","props","stairsRef","tasksDone","daysCount","savedDay","id","catRef","catRect","setCatRect","x","width","height","div","rect","getBoundingClientRect","z","left","days","springProps","from","bottom","to","next","config","duration"],"sources":["/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx"],"sourcesContent":["import React, {Suspense, useState, useRef, useEffect } from 'react'\nimport cat from './astro.png'\nimport { animated, useSpring } from \"react-spring\";\nimport { useFrame, useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Scene } from 'three';\n\n\nconst GltfModel = ({ modelPath, scale = 1, position = [0, 1, 0] }) => {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, modelPath);\n  const [hovered, hover] = useState(false);\n\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.y += 0.007));\n  return (\n    <>\n      <primitive\n        ref={ref}\n        object={gltf.scene}\n        position={position}\n        scale={hovered ? scale * 2 : scale}\n        onPointerOver={(event) => hover(true)}\n        onPointerOut={(event) => hover(false)}\n      />\n    </>\n  );\n};\n\n\n\nexport const Chibi = (props) => {\n  const {stairsRef,tasksDone, daysCount,savedDay,id} = props\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height } = catRect\n  let days=savedDay\n  if(tasksDone){\n    days=daysCount                                                                                                                                 \n  }else{\n    days=savedDay\n  }\n  \n\n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '100px', height: '100px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days +70 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 30 + 'px', left: width * days + width / 2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img\n        ref={catRef}\n        src={cat}\n        alt={'cat'}\n        style={\n          springProps\n        } />\n\n         <ModelViewer\n         ref={catRef} \n         style={\n          springProps\n          }\n         modelPath={\"./scene.gltf\"} />\n\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}