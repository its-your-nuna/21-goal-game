{"ast":null,"code":"export function CountDownTimer(duration, granularity) {\n  this.duration = duration;\n  this.granularity = granularity || 1000;\n  this.tickFtns = [];\n  this.running = false;\n}\n_c = CountDownTimer;\n\nCountDownTimer.prototype.start = function () {\n  if (this.running) {\n    return;\n  }\n\n  this.running = true;\n  var start = Date.now(),\n      that = this,\n      diff,\n      obj;\n\n  (function timer() {\n    diff = that.duration - ((Date.now() - start) / 1000 | 0);\n\n    if (diff > 0) {\n      setTimeout(timer, that.granularity);\n    } else {\n      diff = 0;\n      that.running = false;\n    }\n\n    obj = CountDownTimer.parse(diff);\n    that.tickFtns.forEach(function (ftn) {\n      ftn.call(this, obj.minutes, obj.seconds);\n    }, that);\n  })();\n};\n\nCountDownTimer.prototype.onTick = function (ftn) {\n  if (typeof ftn === 'function') {\n    this.tickFtns.push(ftn);\n  }\n\n  return this;\n};\n\nCountDownTimer.prototype.expired = function () {\n  return !this.running;\n};\n\nCountDownTimer.parse = function (seconds) {\n  return {\n    'minutes': seconds / 60 | 0,\n    'seconds': seconds % 60 | 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"names":["CountDownTimer","duration","granularity","tickFtns","running","prototype","start","Date","now","that","diff","obj","timer","setTimeout","parse","forEach","ftn","call","minutes","seconds","onTick","push","expired"],"sources":["/home/aidana/Game/21goal/game/src/components/main/CountDownTimer.js"],"sourcesContent":["export function CountDownTimer(duration, granularity) {\n    this.duration = duration;\n    this.granularity = granularity || 1000;\n    this.tickFtns = [];\n    this.running = false;\n  }\n  \n  CountDownTimer.prototype.start = function() {\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    var start = Date.now(),\n        that = this,\n        diff, obj;\n  \n    (function timer() {\n      diff = that.duration - (((Date.now() - start) / 1000) | 0);\n  \n      if (diff > 0) {\n        setTimeout(timer, that.granularity);\n      } else {\n        diff = 0;\n        that.running = false;\n      }\n  \n      obj = CountDownTimer.parse(diff);\n      that.tickFtns.forEach(function(ftn) {\n        ftn.call(this, obj.minutes, obj.seconds);\n      }, that);\n    }());\n  };\n  \n  CountDownTimer.prototype.onTick = function(ftn) {\n    if (typeof ftn === 'function') {\n      this.tickFtns.push(ftn);\n    }\n    return this;\n  };\n  \n  CountDownTimer.prototype.expired = function() {\n    return !this.running;\n  };\n  \n  CountDownTimer.parse = function(seconds) {\n    return {\n      'minutes': (seconds / 60) | 0,\n      'seconds': (seconds % 60) | 0\n    };\n  };"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,WAAlC,EAA+C;EAClD,KAAKD,QAAL,GAAgBA,QAAhB;EACA,KAAKC,WAAL,GAAmBA,WAAW,IAAI,IAAlC;EACA,KAAKC,QAAL,GAAgB,EAAhB;EACA,KAAKC,OAAL,GAAe,KAAf;AACD;KALaJ,c;;AAOdA,cAAc,CAACK,SAAf,CAAyBC,KAAzB,GAAiC,YAAW;EAC1C,IAAI,KAAKF,OAAT,EAAkB;IAChB;EACD;;EACD,KAAKA,OAAL,GAAe,IAAf;EACA,IAAIE,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;EAAA,IACIC,IAAI,GAAG,IADX;EAAA,IAEIC,IAFJ;EAAA,IAEUC,GAFV;;EAIC,UAASC,KAAT,GAAiB;IAChBF,IAAI,GAAGD,IAAI,CAACR,QAAL,IAAkB,CAACM,IAAI,CAACC,GAAL,KAAaF,KAAd,IAAuB,IAAxB,GAAgC,CAAjD,CAAP;;IAEA,IAAII,IAAI,GAAG,CAAX,EAAc;MACZG,UAAU,CAACD,KAAD,EAAQH,IAAI,CAACP,WAAb,CAAV;IACD,CAFD,MAEO;MACLQ,IAAI,GAAG,CAAP;MACAD,IAAI,CAACL,OAAL,GAAe,KAAf;IACD;;IAEDO,GAAG,GAAGX,cAAc,CAACc,KAAf,CAAqBJ,IAArB,CAAN;IACAD,IAAI,CAACN,QAAL,CAAcY,OAAd,CAAsB,UAASC,GAAT,EAAc;MAClCA,GAAG,CAACC,IAAJ,CAAS,IAAT,EAAeN,GAAG,CAACO,OAAnB,EAA4BP,GAAG,CAACQ,OAAhC;IACD,CAFD,EAEGV,IAFH;EAGD,CAdA,GAAD;AAeD,CAxBD;;AA0BAT,cAAc,CAACK,SAAf,CAAyBe,MAAzB,GAAkC,UAASJ,GAAT,EAAc;EAC9C,IAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;IAC7B,KAAKb,QAAL,CAAckB,IAAd,CAAmBL,GAAnB;EACD;;EACD,OAAO,IAAP;AACD,CALD;;AAOAhB,cAAc,CAACK,SAAf,CAAyBiB,OAAzB,GAAmC,YAAW;EAC5C,OAAO,CAAC,KAAKlB,OAAb;AACD,CAFD;;AAIAJ,cAAc,CAACc,KAAf,GAAuB,UAASK,OAAT,EAAkB;EACvC,OAAO;IACL,WAAYA,OAAO,GAAG,EAAX,GAAiB,CADvB;IAEL,WAAYA,OAAO,GAAG,EAAX,GAAiB;EAFvB,CAAP;AAID,CALD"},"metadata":{},"sourceType":"module"}