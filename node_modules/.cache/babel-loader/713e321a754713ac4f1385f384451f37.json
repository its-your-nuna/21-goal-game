{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/21goal/src/components/creat/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Form, Button } from 'react-bootstrap';\nimport { create as ipfsHttpClient } from 'ipfs-http-client';\nimport './create.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');\n\nconst Create = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [image, setImage] = useState('');\n  const [price, setPrice] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  console.log('error');\n\n  const createNFT = async () => {\n    console.log('start');\n  }; // const uploadToIPFS = async (event) => {\n  //   event.preventDefault()\n  //   const file = event.target.files[0]\n  //   if (typeof file !== 'undefined') {\n  //     try {\n  //       const result = await client.add(file)\n  //       console.log(result)\n  //       setImage(`https://ipfs.infura.io/ipfs/${result.path}`)\n  //     } catch (error){\n  //       console.log(\"ipfs image upload error: \", error)\n  //     }\n  //   }\n  // }\n  // const mintThenList = async (result) => {\n  //   const uri = `https://ipfs.infura.io/ipfs/${result.path}`\n  //   // mint nft \n  //   await(await nft.mint(uri)).wait()\n  //   // get tokenId of new nft \n  //   const id = await nft.tokenCount()  \n  //   // approve marketplace to spend nft\n  //   await(await nft.setApprovalForAll(marketplace.address, true)).wait()\n  //   // add nft to marketplace\n  //   const listingPrice = ethers.utils.parseEther(price.toString())\n  //   await(await marketplace.makeItem(nft.address, id, listingPrice)).wait()\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 mx-auto\",\n        style: {\n          maxWidth: '1000px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"g-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              required: true,\n              name: \"file\",\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setName(e.target.value),\n              size: \"lg\",\n              required: true,\n              type: \"text\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setDescription(e.target.value),\n              size: \"lg\",\n              required: true,\n              as: \"textarea\",\n              placeholder: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: e => setPrice(e.target.value),\n              size: \"lg\",\n              required: true,\n              type: \"number\",\n              placeholder: \"Price in ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid px-0\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: createNFT,\n                variant: \"primary\",\n                size: \"lg\",\n                children: \"Create & List NFT!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"CejF301mm3S45QBEXO/SVXCwDzQ=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","ethers","Row","Form","Button","create","ipfsHttpClient","client","Create","marketplace","nft","image","setImage","price","setPrice","name","setName","description","setDescription","console","log","createNFT","maxWidth","e","target","value"],"sources":["/home/aidana/Game/21goal/src/components/creat/Create.js"],"sourcesContent":["import { useState } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Form, Button } from 'react-bootstrap'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport './create.scss'\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nconst Create = ({ marketplace, nft }) => {\n  const [image, setImage] = useState('')\n  const [price, setPrice] = useState(null)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  console.log('error')\n  const createNFT = async () => {\n    console.log('start')\n   \n  }\n  // const uploadToIPFS = async (event) => {\n  //   event.preventDefault()\n  //   const file = event.target.files[0]\n  //   if (typeof file !== 'undefined') {\n  //     try {\n  //       const result = await client.add(file)\n  //       console.log(result)\n  //       setImage(`https://ipfs.infura.io/ipfs/${result.path}`)\n  //     } catch (error){\n  //       console.log(\"ipfs image upload error: \", error)\n  //     }\n  //   }\n  // }\n  // const mintThenList = async (result) => {\n  //   const uri = `https://ipfs.infura.io/ipfs/${result.path}`\n  //   // mint nft \n  //   await(await nft.mint(uri)).wait()\n  //   // get tokenId of new nft \n  //   const id = await nft.tokenCount()  \n  //   // approve marketplace to spend nft\n  //   await(await nft.setApprovalForAll(marketplace.address, true)).wait()\n  //   // add nft to marketplace\n  //   const listingPrice = ethers.utils.parseEther(price.toString())\n    \n  //   await(await marketplace.makeItem(nft.address, id, listingPrice)).wait()\n  // }\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <main role=\"main\" className=\"col-lg-12 mx-auto\" style={{ maxWidth: '1000px' }}>\n          <div className=\"content mx-auto\">\n            <Row className=\"g-4\">\n              <Form.Control\n                type=\"file\"\n                required\n                name=\"file\"\n                onChange={(e)=>setImage(e.target.value)}       \n              />\n              <Form.Control onChange={(e) => setName(e.target.value)} size=\"lg\" required type=\"text\" placeholder=\"Name\" />\n              <Form.Control onChange={(e) => setDescription(e.target.value)} size=\"lg\" required as=\"textarea\" placeholder=\"Description\" />\n              <Form.Control onChange={(e) => setPrice(e.target.value)} size=\"lg\" required type=\"number\" placeholder=\"Price in ETH\" />\n              <div className=\"d-grid px-0\">\n                <Button onClick={createNFT} variant=\"primary\" size=\"lg\">\n                  Create & List NFT!\n                </Button>\n              </div>\n            </Row>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Create"],"mappings":"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"},"metadata":{},"sourceType":"module"}