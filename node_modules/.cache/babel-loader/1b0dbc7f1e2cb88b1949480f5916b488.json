{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from './components/marketplace/Home.js';\nimport Create from './components/Create.js';\nimport MyListedItems from './components/MyListedItems.js';\nimport MyPurchases from './components/MyPurchases';\nimport MarketplaceAbi from './contractsData/Marketplace.json';\nimport MarketplaceAddress from './contractsData/Marketplace-address.json';\nimport NFTAbi from './contractsData/NFT.json';\nimport NFTAddress from './contractsData/NFT-address.json';\nimport { useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { Spinner } from 'react-bootstrap';\nimport { MainPage } from \"./components/main/MainPage\";\nimport { Navigation } from \"./components/navbar/Navbar.jsx\";\nimport './App.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [account, setAccount] = useState(null);\n  const [nft, setNFT] = useState({});\n  const [marketplace, setMarketplace] = useState({}); // MetaMask Login/Connect\n\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    setAccount(accounts[0]); // Get provider from Metamask\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // Set signer\n\n    const signer = provider.getSigner();\n    window.ethereum.on('chainChanged', chainId => {\n      window.location.reload();\n    });\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0]);\n      await web3Handler();\n    });\n    loadContracts(signer);\n  };\n\n  const loadContracts = async signer => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer);\n    setMarketplace(marketplace);\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer);\n    setNFT(nft);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) // <BrowserRouter>\n  //   <div className=\"App\">\n  //     <div>\n  //       {loading ? (\n  //         <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh' }}>\n  //           <Spinner animation=\"border\" style={{ display: 'flex' }} />\n  //           <p className='mx-3 my-0'>Awaiting Metamask Connection...</p>\n  //         </div>\n  //       ) : (\n  //         <Routes>\n  //           <Route path=\"/\" element={\n  //             <Home marketplace={marketplace} nft={nft} />\n  //           } />\n  //           <Route path=\"/create\" element={\n  //             <Create marketplace={marketplace} nft={nft} />\n  //           } />\n  //           <Route path=\"/my-listed-items\" element={\n  //             <MyListedItems marketplace={marketplace} nft={nft} account={account} />\n  //           } />\n  //           <Route path=\"/my-purchases\" element={\n  //             <MyPurchases marketplace={marketplace} nft={nft} account={account} />\n  //           } />\n  //           <Route path=\"/mainpage\" element={\n  //             <MainPage />\n  //           } />\n  //         </Routes>\n  //       )}\n  //     </div>\n  //   </div>\n  //   <>\n  //       <Navigation web3Handler={web3Handler} account={account} />\n  //     </>\n  // </BrowserRouter>\n  ;\n}\n\n_s(App, \"X29np9vsVrEJxqb623/r0uMoOl8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Home","Create","MyListedItems","MyPurchases","MarketplaceAbi","MarketplaceAddress","NFTAbi","NFTAddress","useState","ethers","Spinner","MainPage","Navigation","App","loading","setLoading","account","setAccount","nft","setNFT","marketplace","setMarketplace","web3Handler","accounts","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","on","chainId","location","reload","loadContracts","Contract","address","abi"],"sources":["/home/aidana/Game/game/src/App.js"],"sourcesContent":["import {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport Home from './components/marketplace/Home.js'\nimport Create from './components/Create.js'\nimport MyListedItems from './components/MyListedItems.js'\nimport MyPurchases from './components/MyPurchases'\nimport MarketplaceAbi from './contractsData/Marketplace.json'\nimport MarketplaceAddress from './contractsData/Marketplace-address.json'\nimport NFTAbi from './contractsData/NFT.json'\nimport NFTAddress from './contractsData/NFT-address.json'\nimport { useState } from 'react'\nimport { ethers } from \"ethers\"\nimport { Spinner } from 'react-bootstrap'\nimport { MainPage } from \"./components/main/MainPage\";\nimport { Navigation } from \"./components/navbar/Navbar.jsx\";\nimport './App.css'\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [account, setAccount] = useState(null)\n  const [nft, setNFT] = useState({})\n  const [marketplace, setMarketplace] = useState({})\n  // MetaMask Login/Connect\n  const web3Handler = async () => {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    setAccount(accounts[0])\n    // Get provider from Metamask\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    // Set signer\n    const signer = provider.getSigner()\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n    })\n\n    window.ethereum.on('accountsChanged', async function (accounts) {\n      setAccount(accounts[0])\n      await web3Handler()\n    })\n    loadContracts(signer)\n  }\n  const loadContracts = async (signer) => {\n    // Get deployed copies of contracts\n    const marketplace = new ethers.Contract(MarketplaceAddress.address, MarketplaceAbi.abi, signer)\n    setMarketplace(marketplace)\n    const nft = new ethers.Contract(NFTAddress.address, NFTAbi.abi, signer)\n    setNFT(nft)\n    setLoading(false)\n  }\n\n  return (\n    <>\n    \n    </>\n    // <BrowserRouter>\n    //   <div className=\"App\">\n    //     <div>\n    //       {loading ? (\n    //         <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh' }}>\n    //           <Spinner animation=\"border\" style={{ display: 'flex' }} />\n    //           <p className='mx-3 my-0'>Awaiting Metamask Connection...</p>\n    //         </div>\n    //       ) : (\n    //         <Routes>\n    //           <Route path=\"/\" element={\n    //             <Home marketplace={marketplace} nft={nft} />\n    //           } />\n    //           <Route path=\"/create\" element={\n    //             <Create marketplace={marketplace} nft={nft} />\n    //           } />\n    //           <Route path=\"/my-listed-items\" element={\n    //             <MyListedItems marketplace={marketplace} nft={nft} account={account} />\n    //           } />\n    //           <Route path=\"/my-purchases\" element={\n    //             <MyPurchases marketplace={marketplace} nft={nft} account={account} />\n    //           } />\n    //           <Route path=\"/mainpage\" element={\n    //             <MainPage />\n    //           } />\n    //         </Routes>\n    //       )}\n    //     </div>\n    //   </div>\n    //   <>\n    //       <Navigation web3Handler={web3Handler} account={account} />\n    //     </>\n    // </BrowserRouter>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SACEA,aADF,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAMA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAO,WAAP;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C,CAJa,CAKb;;EACA,MAAMc,WAAW,GAAG,YAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,CAAvB;IACAV,UAAU,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAV,CAF8B,CAG9B;;IACA,MAAMK,QAAQ,GAAG,IAAInB,MAAM,CAACoB,SAAP,CAAiBC,YAArB,CAAkCN,MAAM,CAACC,QAAzC,CAAjB,CAJ8B,CAK9B;;IACA,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;IAEAR,MAAM,CAACC,QAAP,CAAgBQ,EAAhB,CAAmB,cAAnB,EAAoCC,OAAD,IAAa;MAC9CV,MAAM,CAACW,QAAP,CAAgBC,MAAhB;IACD,CAFD;IAIAZ,MAAM,CAACC,QAAP,CAAgBQ,EAAhB,CAAmB,iBAAnB,EAAsC,gBAAgBV,QAAhB,EAA0B;MAC9DN,UAAU,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAV;MACA,MAAMD,WAAW,EAAjB;IACD,CAHD;IAIAe,aAAa,CAACN,MAAD,CAAb;EACD,CAjBD;;EAkBA,MAAMM,aAAa,GAAG,MAAON,MAAP,IAAkB;IACtC;IACA,MAAMX,WAAW,GAAG,IAAIX,MAAM,CAAC6B,QAAX,CAAoBjC,kBAAkB,CAACkC,OAAvC,EAAgDnC,cAAc,CAACoC,GAA/D,EAAoET,MAApE,CAApB;IACAV,cAAc,CAACD,WAAD,CAAd;IACA,MAAMF,GAAG,GAAG,IAAIT,MAAM,CAAC6B,QAAX,CAAoB/B,UAAU,CAACgC,OAA/B,EAAwCjC,MAAM,CAACkC,GAA/C,EAAoDT,MAApD,CAAZ;IACAZ,MAAM,CAACD,GAAD,CAAN;IACAH,UAAU,CAAC,KAAD,CAAV;EACD,CAPD;;EASA,oBACE,qCADF,CAIE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EApCF;AAuCD;;GAxEQF,G;;KAAAA,G;AA0ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}