{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport cat from './chibi-cat.png';\nimport { animated, useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chibi = _ref => {\n  _s();\n\n  let {\n    stairsRef,\n    tasksDone,\n    daysCount,\n    poisition\n  } = _ref;\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    });\n  }, []);\n  const {\n    width,\n    height\n  } = catRect;\n  let days = daysCount;\n\n  if (tasksDone) {\n    days += 1;\n  } //else {\n  //   days = daysCount-1\n  // }\n\n\n  const springProps = useSpring({\n    from: {\n      bottom: height * days + 'px',\n      left: width * days + 'px',\n      width: '100px',\n      height: '100px',\n      position: 'relative'\n    },\n    to: async next => {\n      await next({\n        bottom: height * days + 70 + 'px',\n        left: width * days + 'px'\n      });\n      await next({\n        bottom: height * days + 30 + 'px',\n        left: width * days + width / 2 + 'px'\n      });\n    },\n    config: {\n      duration: 500\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.img, {\n      ref: catRef,\n      src: cat,\n      alt: 'cat',\n      className: \"cat\",\n      style: springProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chibi, \"2p7DQ4QkGUCQmJ9QgBHGSKBL2Z4=\", false, function () {\n  return [useSpring];\n});\n\n_c = Chibi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chibi\");","map":{"version":3,"names":["React","useState","useRef","useEffect","cat","animated","useSpring","Chibi","stairsRef","tasksDone","daysCount","poisition","catRef","catRect","setCatRect","x","y","width","height","div","current","rect","getBoundingClientRect","z","left","days","springProps","from","bottom","position","to","next","config","duration"],"sources":["/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport cat from './chibi-cat.png'\nimport { animated, useSpring } from \"react-spring\";\n\n\n\nexport const Chibi = ({ stairsRef, tasksDone, daysCount, poisition }) => {\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height } = catRect\n\n  let days=daysCount\n  if (tasksDone) {\n    days +=1\n  } \n  //else {\n  //   days = daysCount-1\n  // }\n\n\n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '100px', height: '100px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days +70 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 30 + 'px', left: width * days + width / 2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img\n        ref={catRef}\n        src={cat}\n        alt={'cat'}\n        className='cat'\n        style={\n          springProps\n        } />\n\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;;;AAIA,OAAO,MAAMC,KAAK,GAAG,QAAoD;EAAA;;EAAA,IAAnD;IAAEC,SAAF;IAAaC,SAAb;IAAwBC,SAAxB;IAAmCC;EAAnC,CAAmD;EAEvE,MAAMC,MAAM,GAAGV,MAAM,CAAC,IAAD,CAArB;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC;IACrCc,CAAC,EAAE,CADkC;IAErCC,CAAC,EAAE,CAFkC;IAGrCC,KAAK,EAAE,CAH8B;IAIrCC,MAAM,EAAE;EAJ6B,CAAD,CAAtC;EAMAf,SAAS,CAAC,MAAM;IACd,MAAMgB,GAAG,GAAGX,SAAS,CAACY,OAAtB;IACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,qBAAJ,EAAb;IACAR,UAAU,CAAC;MACTC,CAAC,EAAEM,IAAI,CAACN,CADC;MAETC,CAAC,EAAEK,IAAI,CAACL,CAFC;MAGTO,CAAC,EAAEF,IAAI,CAACE,CAHC;MAITC,IAAI,EAAEH,IAAI,CAACG,IAJF;MAKTP,KAAK,EAAEI,IAAI,CAACJ,KALH;MAMTC,MAAM,EAAEG,IAAI,CAACH;IANJ,CAAD,CAAV;EAQD,CAXQ,EAWN,EAXM,CAAT;EAYA,MAAM;IAAED,KAAF;IAASC;EAAT,IAAoBL,OAA1B;EAEA,IAAIY,IAAI,GAACf,SAAT;;EACA,IAAID,SAAJ,EAAe;IACbgB,IAAI,IAAG,CAAP;EACD,CA1BsE,CA2BvE;EACA;EACA;;;EAGA,MAAMC,WAAW,GAAGpB,SAAS,CAAC;IAC5BqB,IAAI,EAAE;MAAEC,MAAM,EAAEV,MAAM,GAAGO,IAAT,GAAgB,IAA1B;MAAgCD,IAAI,EAAEP,KAAK,GAAGQ,IAAR,GAAe,IAArD;MAA2DR,KAAK,EAAE,OAAlE;MAA2EC,MAAM,EAAE,OAAnF;MAA4FW,QAAQ,EAAE;IAAtG,CADsB;IAE5BC,EAAE,EAAE,MAAMC,IAAN,IAAc;MAChB,MAAMA,IAAI,CAAC;QAAEH,MAAM,EAAEV,MAAM,GAAGO,IAAT,GAAe,EAAf,GAAoB,IAA9B;QAAoCD,IAAI,EAAEP,KAAK,GAAGQ,IAAR,GAAe;MAAzD,CAAD,CAAV;MACA,MAAMM,IAAI,CAAC;QAAEH,MAAM,EAAEV,MAAM,GAAGO,IAAT,GAAgB,EAAhB,GAAqB,IAA/B;QAAqCD,IAAI,EAAEP,KAAK,GAAGQ,IAAR,GAAeR,KAAK,GAAG,CAAvB,GAA2B;MAAtE,CAAD,CAAV;IACD,CAL2B;IAM5Be,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAZ;EANoB,CAAD,CAA7B;EASA,oBACE;IAAA,uBACE,QAAC,QAAD,CAAU,GAAV;MACE,GAAG,EAAErB,MADP;MAEE,GAAG,EAAER,GAFP;MAGE,GAAG,EAAE,KAHP;MAIE,SAAS,EAAC,KAJZ;MAKE,KAAK,EACHsB;IANJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAaD,CAtDM;;GAAMnB,K;UAgCSD,S;;;KAhCTC,K"},"metadata":{},"sourceType":"module"}