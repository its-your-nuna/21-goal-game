{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/game/src/components/main/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './main.scss';\nimport { Stair } from '../stair/Stair';\nimport { Chibi } from '../chibi/Chibi';\nimport { Tasks } from '../tasks/Tasks';\nimport { TaskContext } from '../Context';\nimport { Navigation } from '../navbar/Navbar';\nimport { ModalClass } from '../modal/Modal';\nimport { CountDownTimer } from './CountDownTimer';\nimport prize from '../../images/prize.png';\nimport box from '../../images/box.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = _ref => {\n  _s();\n\n  let {\n    player\n  } = _ref;\n  const stairsRef = useRef(null);\n  const [id, setId] = useState(0);\n  let [count, setCount] = useState(0);\n  let [daysCount, setDaysCount] = useState(0);\n  const [savedDay, setSavedDay] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [isClicked, setIsClicked] = useState(true);\n  const [isExpired, setIsExpired] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [tasksDone, setTasksDone] = useState(false);\n  const [modalText, setModalText] = useState(\"\");\n  const [savedTasksDone, setSavedTasksDone] = useState(true);\n  const [time, setTime] = useState(\"\");\n  useEffect(() => {\n    if (tasksDone && isExpired) {\n      setSavedDay(daysCount);\n    }\n\n    if (savedDay === 5 || savedDay === 9 || savedDay === 15) {\n      setCount(count += 50);\n      setModalShow(true);\n\n      if (savedDay === 22) {\n        setCount(count += 150);\n      }\n\n      setSavedTasksDone(false);\n      setModalShow(true);\n      setModalText(\"You won\" + count + \"ETC\");\n    }\n  }, [tasksDone]);\n  console.log(player);\n\n  window.onload = function () {\n    var display = document.querySelector('#time'),\n        timer = new CountDownTimer(10);\n    timer.onTick(format).onTick(restart).start();\n\n    function restart() {\n      if (daysCount < 21) {\n        if (this.expired()) {\n          setTimeout(function () {\n            timer.start();\n          }, 1000);\n          daysCount += 1;\n          setDaysCount(daysCount);\n          setTasksDone(false);\n          setIsExpired(true);\n        }\n      } else if (this.expired() && daysCount > 3) {\n        setTimeout(function () {\n          ;\n        }, 1000);\n        setDaysCount(0);\n      }\n    }\n\n    function format(minutes, seconds) {\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      display.textContent = minutes + ':' + seconds;\n    }\n  };\n\n  console.log(window.onload);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n      value: {\n        setTasksDone,\n        setDaysCount,\n        setIsClicked,\n        setId,\n        setModalShow,\n        setModalText\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Stair, {\n        stairsRef: stairsRef,\n        isClicked: isClicked,\n        taskDone: tasksDone,\n        savedTasksDone: savedTasksDone,\n        daysArray: daysArray,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Chibi, {\n        daysCount: daysCount,\n        savedDay: savedDay,\n        stairsRef: stairsRef,\n        tasksDone: tasksDone,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        daysCount: daysCount,\n        tasksDone: tasksDone,\n        stairsRef: stairsRef,\n        isClicked: isClicked,\n        isExpired: isExpired,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), \"$\", savedTasksDone && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"prize\",\n        src: prize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this), \"$\", savedTasksDone && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"prize2\",\n        src: prize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }, this), \"$\", savedTasksDone && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"prize3\",\n        src: prize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }, this), \"$\", savedTasksDone && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"box\",\n        src: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(ModalClass, {\n        show: modalShow,\n        modalText: modalText,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"b/MPqCufQiQC26HYE95xMIdI0MI=\");\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Stair","Chibi","Tasks","TaskContext","Navigation","ModalClass","CountDownTimer","prize","box","MainPage","player","stairsRef","id","setId","count","setCount","daysCount","setDaysCount","savedDay","setSavedDay","daysArray","setDaysArray","isClicked","setIsClicked","isExpired","setIsExpired","modalShow","setModalShow","tasksDone","setTasksDone","modalText","setModalText","savedTasksDone","setSavedTasksDone","time","setTime","console","log","window","onload","display","document","querySelector","timer","onTick","format","restart","start","expired","setTimeout","minutes","seconds","textContent"],"sources":["/home/aidana/Game/game/src/components/main/MainPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport './main.scss'\nimport { Stair } from '../stair/Stair'\nimport { Chibi } from '../chibi/Chibi'\nimport { Tasks } from '../tasks/Tasks'\nimport { TaskContext } from '../Context'\nimport { Navigation } from '../navbar/Navbar'\nimport { ModalClass } from '../modal/Modal'\nimport { CountDownTimer } from './CountDownTimer'\nimport prize from '../../images/prize.png'\nimport box from '../../images/box.png'\n\n\nexport const MainPage = ({player}) => {\n  const stairsRef = useRef(null)\n  const [id, setId] = useState(0)\n  let [count, setCount] = useState(0)\n  let [daysCount, setDaysCount] = useState(0)\n  const [savedDay, setSavedDay] = useState(0)\n  const [daysArray, setDaysArray] = useState([])\n  const [isClicked, setIsClicked] = useState(true)\n  const [isExpired, setIsExpired] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [tasksDone, setTasksDone] = useState(false);\n  const [modalText, setModalText] = useState(\"\")\n  const [savedTasksDone, setSavedTasksDone] = useState(true);\n  const [time,setTime] = useState(\"\")\n  useEffect(() => {\n    if (tasksDone && isExpired) {\n      setSavedDay(daysCount)\n    }\n    if (savedDay === 5 || savedDay === 9 || savedDay === 15) {\n      setCount(count += 50)\n      setModalShow(true)\n      if (savedDay === 22) {\n        setCount(count += 150)\n      }\n      setSavedTasksDone(false)\n      setModalShow(true)\n      setModalText(\"You won\" + count + \"ETC\")\n    }\n  }, [tasksDone])\n\n  console.log(player)\n\n  window.onload = function () {\n\n    var display = document.querySelector('#time'),\n      timer = new CountDownTimer(10);\n\n    timer.onTick(format).onTick(restart).start();\n    function restart() {\n      if (daysCount < 21) {\n        if (this.expired()) {\n           setTimeout(function () {\n            timer.start()\n          }, 1000);\n          daysCount += 1;\n          setDaysCount(daysCount)\n          setTasksDone(false)\n          setIsExpired(true)\n        }\n\n      } else if (this.expired() && daysCount > 3) {\n        setTimeout(function () {\n          ;\n        }, 1000);\n        setDaysCount(0)\n      }\n  \n    }\n    function format(minutes, seconds) {\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      display.textContent = minutes + ':' + seconds;\n    }\n  };\n  \n  console.log(window.onload)\n  return (\n    <section>\n    <TaskContext.Provider value={{\n      setTasksDone,\n      setDaysCount,\n      setIsClicked,\n      setId,\n      setModalShow,\n      setModalText\n    }}>\n      <span id=\"time\">{time}</span>\n      <Stair\n        stairsRef={stairsRef}\n        isClicked={isClicked}\n        taskDone={tasksDone}\n        savedTasksDone={savedTasksDone}\n        daysArray={daysArray}\n        id={id} />\n      <Chibi\n        daysCount={daysCount}\n        savedDay={savedDay}\n        stairsRef={stairsRef}\n        tasksDone={tasksDone}\n        id={id} />\n      <Tasks\n        daysCount={daysCount}\n        tasksDone={tasksDone}\n        stairsRef={stairsRef}\n        isClicked={isClicked}\n        isExpired={isExpired}\n        id={id}\n      />\n      ${savedTasksDone && <img className='prize' src={prize} />}\n      ${savedTasksDone && <img className='prize2' src={prize} />}\n      ${savedTasksDone && <img className='prize3' src={prize} />}\n      ${savedTasksDone && <img className='box' src={box} />}\n      <ModalClass\n        show={modalShow}\n        modalText={modalText}\n        onHide={() => setModalShow(false)}\n      />\n    </TaskContext.Provider>\n    </section>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}