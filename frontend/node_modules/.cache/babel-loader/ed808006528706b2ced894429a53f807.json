{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/games/21goal/src/components/main/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Stair } from '../stair/Stair';\nimport { Chibi } from '../chibi/Chibi';\nimport { Tasks } from '../tasks/Tasks';\nimport { TaskContext } from '../Context';\nimport Countdown from \"react-countdown\";\nimport './main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Completionist = () => /*#__PURE__*/_jsxDEV(\"span\", {\n  children: \"You are good to go!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 29\n}, this);\n\n_c = Completionist;\nexport const MainPage = () => {\n  _s();\n\n  const [tasksDone, setTasksDone] = useState(false);\n  const onScroll = useCallback(function (e) {\n    var scrollTop = $(this).scrollTop();\n\n    if (scrollTop === lastScrollTop) {\n      // Vertical scroll position is unchanged, so we're scrolling horizontal.\n      $(this).scrollTop($(this).scrollLeft());\n    } else {\n      // Vertical scroll position has changed, so we're scrolling vertical.\n      $(this).scrollLeft($(this).scrollTop());\n    }\n\n    lastScrollTop = scrollTop;\n  }, []);\n  const stairsRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    className: \"scroller\",\n    value: {\n      setTasksDone\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"diagonalscroller\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"http://dummyimage.com/800/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"izCNXh5N99rw1AVvscTjlp9hpZE=\");\n\n_c2 = MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Completionist\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["React","useRef","useState","Stair","Chibi","Tasks","TaskContext","Countdown","Completionist","MainPage","tasksDone","setTasksDone","onScroll","useCallback","e","scrollTop","$","lastScrollTop","scrollLeft","stairsRef"],"sources":["/home/aidana/Game/games/21goal/src/components/main/MainPage.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport {Stair} from '../stair/Stair'\nimport {Chibi} from '../chibi/Chibi'\nimport { Tasks } from '../tasks/Tasks'\nimport { TaskContext } from '../Context'\nimport Countdown from \"react-countdown\";\nimport './main.css'\nconst Completionist = () => <span>You are good to go!</span>;\n\nexport const MainPage = () => {\n  const [tasksDone,setTasksDone] = useState(false)\n   const onScroll = useCallback(function(e) {\n       var scrollTop = $(this).scrollTop()    \n       if (scrollTop === lastScrollTop) {\n           // Vertical scroll position is unchanged, so we're scrolling horizontal.\n           $(this).scrollTop($(this).scrollLeft());\n       } else {\n           // Vertical scroll position has changed, so we're scrolling vertical.\n           $(this).scrollLeft($(this).scrollTop());\n       }\n       lastScrollTop = scrollTop;\n   },[]);\n  const stairsRef = useRef(null)\n  return (\n    <TaskContext.Provider className='scroller' value={{\n        setTasksDone\n    }}>\n     \n     <div id=\"diagonalscroller\">\n    <img src=\"http://dummyimage.com/800/\" />\n    </div>\n    {/* <Countdown date={Date.now() + 10000}>\n    <Completionist />\n  </Countdown> */}\n    {/* <Stair\n    stairsRef={stairsRef}/>\n    <Chibi\n    stairsRef={stairsRef}\n    tasksDone={tasksDone}/> */}\n    {/* <Tasks\n    tasksDone={tasksDone}\n    />  */}\n    </TaskContext.Provider>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,YAAP;;;AACA,MAAMC,aAAa,GAAG,mBAAM;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QAA5B;;KAAMA,a;AAEN,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;EACC,MAAMU,QAAQ,GAAGC,WAAW,CAAC,UAASC,CAAT,EAAY;IACrC,IAAIC,SAAS,GAAGC,CAAC,CAAC,IAAD,CAAD,CAAQD,SAAR,EAAhB;;IACA,IAAIA,SAAS,KAAKE,aAAlB,EAAiC;MAC7B;MACAD,CAAC,CAAC,IAAD,CAAD,CAAQD,SAAR,CAAkBC,CAAC,CAAC,IAAD,CAAD,CAAQE,UAAR,EAAlB;IACH,CAHD,MAGO;MACH;MACAF,CAAC,CAAC,IAAD,CAAD,CAAQE,UAAR,CAAmBF,CAAC,CAAC,IAAD,CAAD,CAAQD,SAAR,EAAnB;IACH;;IACDE,aAAa,GAAGF,SAAhB;EACH,CAV2B,EAU1B,EAV0B,CAA5B;EAWD,MAAMI,SAAS,GAAGlB,MAAM,CAAC,IAAD,CAAxB;EACA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,SAAS,EAAC,UAAhC;IAA2C,KAAK,EAAE;MAC9CU;IAD8C,CAAlD;IAAA,uBAIC;MAAK,EAAE,EAAC,kBAAR;MAAA,uBACD;QAAK,GAAG,EAAC;MAAT;QAAA;QAAA;QAAA;MAAA;IADC;MAAA;MAAA;MAAA;IAAA;EAJD;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAnCM;;GAAMF,Q;;MAAAA,Q"},"metadata":{},"sourceType":"module"}