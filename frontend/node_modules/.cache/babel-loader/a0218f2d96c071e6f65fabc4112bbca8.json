{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport cat from './chibi-cat.png';\nimport './chibi.css';\nimport { animated, useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chibi = _ref => {\n  _s();\n\n  let {\n    stairsRef,\n    tasksDone,\n    daysCount\n  } = _ref;\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const div = stairsRef.current;\n    console.log;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    });\n  }, []);\n  const {\n    width,\n    height\n  } = catRect;\n  let days;\n\n  if (tasksDone) {\n    days = daysCount;\n  } else {\n    days = 0;\n  }\n\n  const springProps = useSpring({\n    from: {\n      bottom: height * days + 'px',\n      left: width * days + 'px',\n      width: '100px',\n      height: '100px',\n      position: 'relative'\n    },\n    to: async next => {\n      await next({\n        bottom: height * days * 1.5 + 'px',\n        left: width * days + 'px'\n      });\n      await next({\n        bottom: height * days + 30 + 'px',\n        left: width * days + width / 2 + 'px'\n      });\n    },\n    config: {\n      duration: 500\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.img, {\n      ref: catRef,\n      src: cat,\n      alt: 'cat',\n      className: \"cat\",\n      style: springProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chibi, \"2p7DQ4QkGUCQmJ9QgBHGSKBL2Z4=\", false, function () {\n  return [useSpring];\n});\n\n_c = Chibi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chibi\");","map":{"version":3,"names":["React","useState","useRef","useEffect","cat","animated","useSpring","Chibi","stairsRef","tasksDone","daysCount","catRef","catRect","setCatRect","x","y","width","height","div","current","console","log","rect","getBoundingClientRect","z","left","days","springProps","from","bottom","position","to","next","config","duration"],"sources":["/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport cat from './chibi-cat.png'\nimport './chibi.css'\nimport { animated, useSpring } from \"react-spring\";\n\n\n\nexport const Chibi = ({ stairsRef, tasksDone,daysCount }) => {\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    console.log\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height} = catRect\n\n  let days;\n  if(tasksDone){\n    days =daysCount\n  }else{\n    days=0\n  }\n\n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '100px', height: '100px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days * 1.5 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 30 + 'px', left: width *days+width/2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img\n        ref={catRef}\n        src={cat}\n        alt={'cat'}\n        className='cat'\n        style={\n          springProps\n        } />\n\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;;;AAIA,OAAO,MAAMC,KAAK,GAAG,QAAwC;EAAA;;EAAA,IAAvC;IAAEC,SAAF;IAAaC,SAAb;IAAuBC;EAAvB,CAAuC;EAE3D,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAD,CAArB;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;IACrCa,CAAC,EAAE,CADkC;IAErCC,CAAC,EAAE,CAFkC;IAGrCC,KAAK,EAAE,CAH8B;IAIrCC,MAAM,EAAE;EAJ6B,CAAD,CAAtC;EAMAd,SAAS,CAAC,MAAM;IACd,MAAMe,GAAG,GAAGV,SAAS,CAACW,OAAtB;IACAC,OAAO,CAACC,GAAR;IACA,MAAMC,IAAI,GAAGJ,GAAG,CAACK,qBAAJ,EAAb;IACAV,UAAU,CAAC;MACTC,CAAC,EAAEQ,IAAI,CAACR,CADC;MAETC,CAAC,EAAEO,IAAI,CAACP,CAFC;MAGTS,CAAC,EAAEF,IAAI,CAACE,CAHC;MAITC,IAAI,EAAEH,IAAI,CAACG,IAJF;MAKTT,KAAK,EAAEM,IAAI,CAACN,KALH;MAMTC,MAAM,EAAEK,IAAI,CAACL;IANJ,CAAD,CAAV;EAQD,CAZQ,EAYN,EAZM,CAAT;EAaA,MAAM;IAAED,KAAF;IAASC;EAAT,IAAmBL,OAAzB;EAEA,IAAIc,IAAJ;;EACA,IAAGjB,SAAH,EAAa;IACXiB,IAAI,GAAEhB,SAAN;EACD,CAFD,MAEK;IACHgB,IAAI,GAAC,CAAL;EACD;;EAED,MAAMC,WAAW,GAAGrB,SAAS,CAAC;IAC5BsB,IAAI,EAAE;MAAEC,MAAM,EAAEZ,MAAM,GAAGS,IAAT,GAAgB,IAA1B;MAAgCD,IAAI,EAAET,KAAK,GAAGU,IAAR,GAAe,IAArD;MAA2DV,KAAK,EAAE,OAAlE;MAA2EC,MAAM,EAAE,OAAnF;MAA4Fa,QAAQ,EAAE;IAAtG,CADsB;IAE5BC,EAAE,EAAE,MAAMC,IAAN,IAAc;MAChB,MAAMA,IAAI,CAAC;QAAEH,MAAM,EAAEZ,MAAM,GAAGS,IAAT,GAAgB,GAAhB,GAAsB,IAAhC;QAAsCD,IAAI,EAAET,KAAK,GAAGU,IAAR,GAAe;MAA3D,CAAD,CAAV;MACA,MAAMM,IAAI,CAAC;QAAEH,MAAM,EAAEZ,MAAM,GAAGS,IAAT,GAAgB,EAAhB,GAAqB,IAA/B;QAAqCD,IAAI,EAAET,KAAK,GAAEU,IAAP,GAAYV,KAAK,GAAC,CAAlB,GAAsB;MAAjE,CAAD,CAAV;IACD,CAL2B;IAM5BiB,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAZ;EANoB,CAAD,CAA7B;EASA,oBACE;IAAA,uBACE,QAAC,QAAD,CAAU,GAAV;MACE,GAAG,EAAEvB,MADP;MAEE,GAAG,EAAEP,GAFP;MAGE,GAAG,EAAE,KAHP;MAIE,SAAS,EAAC,KAJZ;MAKE,KAAK,EACHuB;IANJ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAaD,CArDM;;GAAMpB,K;UA+BSD,S;;;KA/BTC,K"},"metadata":{},"sourceType":"module"}