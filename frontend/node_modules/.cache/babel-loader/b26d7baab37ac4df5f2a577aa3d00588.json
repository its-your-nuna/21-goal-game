{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/uno/21goal/src/components/chibi/Chibi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useState, useRef } from 'react';\nimport cat from './chibi-cat.png';\nimport './chibi.css';\nimport { animated, useSpring } from \"react-spring\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedItem = styled(animated.div)`\n  width: 100,\n  background: \"brand\"\n`;\nexport const Chibi = () => {\n  _s();\n\n  const catRef = useRef(null);\n  console.log(catRef.getBoundingClientRect());\n  const [animate, setAnimate] = useState(false);\n  const springProps = useSpring({\n    loop: {\n      reverse: animate\n    },\n    from: {\n      y: 0\n    },\n    to: {\n      y: 100\n    },\n    config: {\n      duration: 500\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.img, {\n      ref: catRef,\n      src: cat,\n      alt: 'cat',\n      className: \"cat\",\n      onClick: obj => {\n        setAnimate(!animate);\n      },\n      style: springProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chibi, \"PH8+DbD5tQnBkHG31QxqAP0qDgE=\", false, function () {\n  return [useSpring];\n});\n\n_c = Chibi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chibi\");","map":{"version":3,"names":["React","createRef","useState","useRef","cat","animated","useSpring","styled","ThemeProvider","AnimatedItem","div","Chibi","catRef","console","log","getBoundingClientRect","animate","setAnimate","springProps","loop","reverse","from","y","to","config","duration","obj"],"sources":["/home/aidana/Game/uno/21goal/src/components/chibi/Chibi.jsx"],"sourcesContent":["import React, { createRef, useState,useRef } from 'react'\nimport cat from './chibi-cat.png'\nimport './chibi.css'\nimport { animated, useSpring } from \"react-spring\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\n\n\nconst AnimatedItem = styled(animated.div)`\n  width: 100,\n  background: \"brand\"\n`;\n\nexport const Chibi = () => {\n  const catRef = useRef(null);\n  console.log(catRef.getBoundingClientRect())\n  const [animate,setAnimate]=useState(false)\n  const springProps = useSpring({\n    loop: { reverse: animate },\n    from: { y: 0},\n    to: { y: 100},\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n            <animated.img\n            ref={catRef}\n            src={cat}\n            alt={'cat'}\n            className='cat'\n            onClick={(obj)=>{\n              setAnimate(!animate)\n              \n            }}\n            style={springProps} />\n    \n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;;;AAIA,MAAMC,YAAY,GAAGF,MAAM,CAACF,QAAQ,CAACK,GAAV,CAAe;AAC1C;AACA;AACA,CAHA;AAKA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EACzB,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAD,CAArB;EACAU,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,qBAAP,EAAZ;EACA,MAAM,CAACC,OAAD,EAASC,UAAT,IAAqBf,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAMgB,WAAW,GAAGZ,SAAS,CAAC;IAC5Ba,IAAI,EAAE;MAAEC,OAAO,EAAEJ;IAAX,CADsB;IAE5BK,IAAI,EAAE;MAAEC,CAAC,EAAE;IAAL,CAFsB;IAG5BC,EAAE,EAAE;MAAED,CAAC,EAAE;IAAL,CAHwB;IAI5BE,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAZ;EAJoB,CAAD,CAA7B;EAOA,oBACE;IAAA,uBACQ,QAAC,QAAD,CAAU,GAAV;MACA,GAAG,EAAEb,MADL;MAEA,GAAG,EAAER,GAFL;MAGA,GAAG,EAAE,KAHL;MAIA,SAAS,EAAC,KAJV;MAKA,OAAO,EAAGsB,GAAD,IAAO;QACdT,UAAU,CAAC,CAACD,OAAF,CAAV;MAED,CARD;MASA,KAAK,EAAEE;IATP;MAAA;MAAA;MAAA;IAAA;EADR,iBADF;AAeD,CA1BM;;GAAMP,K;UAISL,S;;;KAJTK,K"},"metadata":{},"sourceType":"module"}