{"ast":null,"code":"var _jsxFileName = \"/home/aidana/Game/games/21goal/src/components/chibi/Chibi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport cat from './chibi-cat.png';\nimport './chibi.css';\nimport { animated, useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chibi = _ref => {\n  _s();\n\n  let {\n    stairsRef,\n    tasksDone\n  } = _ref;\n  const catRef = useRef(null);\n  const [animate, setAnimate] = useState(false);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    });\n  }, []);\n  const {\n    x,\n    y,\n    width,\n    height\n  } = catRect; // const springProps = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: height+90+'px', left: '10%'})\n  //       await next({ bottom: (height/2+60)+'px'})        \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps2 = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' })  \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: height+120+'px', left: '30%'})\n  //       await next({ bottom: (height/2+90)+'px'})        \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps2 = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' })  \n  // },\n  //   config: { duration: 500 }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(animated.img, {\n      ref: catRef,\n      src: cat,\n      alt: 'cat',\n      className: \"cat\",\n      style: tasksDone ? springProps : springProps2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chibi, \"vHAq7+gR4MZ5xVFDTnwkX4VBn6Q=\");\n\n_c = Chibi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chibi\");","map":{"version":3,"names":["React","useState","useRef","useEffect","cat","animated","useSpring","Chibi","stairsRef","tasksDone","catRef","animate","setAnimate","catRect","setCatRect","x","y","width","height","div","current","rect","getBoundingClientRect","springProps","springProps2"],"sources":["/home/aidana/Game/games/21goal/src/components/chibi/Chibi.jsx"],"sourcesContent":["import React, { useState,useRef, useEffect } from 'react'\nimport cat from './chibi-cat.png'\nimport './chibi.css'\nimport { animated, useSpring } from \"react-spring\";\n\n\n\nexport const Chibi = ({stairsRef,tasksDone}) => {\n\n  const catRef = useRef(null);\n  const [animate,setAnimate]=useState(false)\n  const [catRect,setCatRect]=useState({\n      x:0,\n      y:0,\n      width:0,\n      height:0   \n  })\n  useEffect(()=>{\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x:rect.x,\n      y:rect.y,\n      width:rect.width,\n      height:rect.height})\n  },[])\n  const {x,y,width,height}=catRect\n  // const springProps = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: height+90+'px', left: '10%'})\n  //       await next({ bottom: (height/2+60)+'px'})        \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps2 = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: 0+'px', left: '0%', width: '10%', height: '10%',position: 'relative' })  \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps = useSpring({\n  //   // loop: { reverse: animate},\n  //   from: { bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom: height+120+'px', left: '30%'})\n  //       await next({ bottom: (height/2+90)+'px'})        \n  // },\n  //   config: { duration: 500 }\n  // });\n  // const springProps2 = useSpring({\n  //   // loop: { reverse: animate},\n    \n  //   from: { bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' },\n  //   to: async next=> { \n  //       await next({ bottom:(height/2+60)+'px', left: '10%', width: '10%', height: '10%',position: 'relative' })  \n  // },\n  //   config: { duration: 500 }\n  // });\n\n  return (\n    <>\n            <animated.img\n            ref={catRef}\n            src={cat}\n            alt={'cat'}\n            className='cat'\n            style={\n              tasksDone?\n              springProps:\n              springProps2} />\n    \n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;;;AAIA,OAAO,MAAMC,KAAK,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAACC,SAAD;IAAWC;EAAX,CAA0B;EAE9C,MAAMC,MAAM,GAAGR,MAAM,CAAC,IAAD,CAArB;EACA,MAAM,CAACS,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAC,KAAD,CAAnC;EACA,MAAM,CAACY,OAAD,EAASC,UAAT,IAAqBb,QAAQ,CAAC;IAChCc,CAAC,EAAC,CAD8B;IAEhCC,CAAC,EAAC,CAF8B;IAGhCC,KAAK,EAAC,CAH0B;IAIhCC,MAAM,EAAC;EAJyB,CAAD,CAAnC;EAMAf,SAAS,CAAC,MAAI;IACZ,MAAMgB,GAAG,GAAGX,SAAS,CAACY,OAAtB;IACA,MAAMC,IAAI,GAAGF,GAAG,CAACG,qBAAJ,EAAb;IACAR,UAAU,CAAC;MACTC,CAAC,EAACM,IAAI,CAACN,CADE;MAETC,CAAC,EAACK,IAAI,CAACL,CAFE;MAGTC,KAAK,EAACI,IAAI,CAACJ,KAHF;MAITC,MAAM,EAACG,IAAI,CAACH;IAJH,CAAD,CAAV;EAKD,CARQ,EAQP,EARO,CAAT;EASA,MAAM;IAACH,CAAD;IAAGC,CAAH;IAAKC,KAAL;IAAWC;EAAX,IAAmBL,OAAzB,CAnB8C,CAoB9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACQ,QAAC,QAAD,CAAU,GAAV;MACA,GAAG,EAAEH,MADL;MAEA,GAAG,EAAEN,GAFL;MAGA,GAAG,EAAE,KAHL;MAIA,SAAS,EAAC,KAJV;MAKA,KAAK,EACHK,SAAS,GACTc,WADS,GAETC;IARF;MAAA;MAAA;MAAA;IAAA;EADR,iBADF;AAcD,CAtEM;;GAAMjB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}