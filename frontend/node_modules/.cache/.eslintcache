[{"/home/aidana/Game/games/21goal/frontend/src/index.js":"1","/home/aidana/Game/games/21goal/frontend/src/App.js":"2","/home/aidana/Game/games/21goal/frontend/src/components/main/MainPage.js":"3","/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx":"4","/home/aidana/Game/games/21goal/frontend/src/components/tasks/Tasks.jsx":"5","/home/aidana/Game/games/21goal/frontend/src/components/stair/Stair.js":"6","/home/aidana/Game/games/21goal/frontend/src/components/Context.js":"7"},{"size":257,"mtime":1657183494985,"results":"8","hashOfConfig":"9"},{"size":169,"mtime":1658121156432,"results":"10","hashOfConfig":"9"},{"size":946,"mtime":1658234263069,"results":"11","hashOfConfig":"9"},{"size":1297,"mtime":1658230399649,"results":"12","hashOfConfig":"9"},{"size":4245,"mtime":1658293195041,"results":"13","hashOfConfig":"9"},{"size":1446,"mtime":1658232980376,"results":"14","hashOfConfig":"9"},{"size":85,"mtime":1657533346279,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"1mt9ggw",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/aidana/Game/games/21goal/frontend/src/index.js",["41"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport $ from 'jquery';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n",[],"/home/aidana/Game/games/21goal/frontend/src/App.js",[],[],"/home/aidana/Game/games/21goal/frontend/src/components/main/MainPage.js",[],[],"/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx",["42"],[],"import React, { useState, useRef, useEffect } from 'react'\nimport cat from './chibi-cat.png'\nimport { animated, useSpring } from \"react-spring\";\n\n\n\nexport const Chibi = ({ stairsRef, tasksDone,daysCount }) => {\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height} = catRect\n\n  let days;\n  if(tasksDone){\n    days =daysCount\n  }else{\n    days=0\n  }\n\n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '100px', height: '100px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days * 1.5 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 30 + 'px', left: width *days+width/2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img\n        ref={catRef}\n        src={cat}\n        alt={'cat'}\n        className='cat'\n        style={\n          springProps\n        } />\n\n    </>\n  )\n}\n","/home/aidana/Game/games/21goal/frontend/src/components/tasks/Tasks.jsx",["43","44","45"],[],"/home/aidana/Game/games/21goal/frontend/src/components/stair/Stair.js",["46","47","48","49"],[],"import React, { useEffect, useState } from 'react'\nimport './Stair.scss'\nimport { useContext } from 'react'\nimport live from '../../images/heart.png'\nimport { TaskContext } from '../Context'\n\nexport const Stair = ({stairsRef,isClicked,id}) => {\n    const stairsCount = 23\n    const { setIsClicked} = useContext(TaskContext)\n    const { setId} = useContext(TaskContext)\n    const clickHeart = (i)=>{\n        setId(i)\n        setIsClicked(!isClicked)\n    }\n  return (\n    <>\n     <div className=\"stairs\" >\n        <div className=\"base\"> </div>\n        \n            <div className=\"step\"\n            ref={stairsRef}\n            style = {{\"--j\":1}}>\n                <i ><img onClick={\n                    ()=>{setIsClicked(!isClicked)}\n                    } \n                    style={{width:'75px',margin:'0px'}}\n                     src={live}/></i>\n                <i></i>\n            </div>\n            {\n            [...Array(stairsCount)].map((e, i) => \n            (i!==0)? \n            <div className=\"step\"\n                key={i}\n                style = {{\"--j\":i}}>\n                    <i><img onClick={\n                        ()=>{\n                            clickHeart(i)\n                        }\n                        } \n                        style={{width:'75px',margin:'0px'}} \n                        src={live}/></i>\n                    <i></i>\n                </div>:''\n            )}\n           \n     </div>\n    </>\n  )\n}\n","/home/aidana/Game/games/21goal/frontend/src/components/Context.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":9},{"ruleId":"54","severity":1,"message":"55","line":27,"column":6,"nodeType":"56","endLine":27,"endColumn":8,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":64,"column":5,"nodeType":"56","endLine":64,"endColumn":7,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"59","line":66,"column":15,"nodeType":"60","endLine":66,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":114,"column":21,"nodeType":"63","endLine":114,"endColumn":83},{"ruleId":"50","severity":1,"message":"64","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"65","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":23,"column":21,"nodeType":"63","endLine":27,"endColumn":34},{"ruleId":"61","severity":1,"message":"62","line":36,"column":24,"nodeType":"63","endLine":42,"endColumn":37},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stairsRef'. Either include it or remove the dependency array.","ArrayExpression",["66"],["67"],"Assignments to the 'element' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.",{"desc":"68","fix":"69"},{"desc":"68","fix":"70"},"Update the dependencies array to be: [stairsRef]",{"range":"71","text":"72"},{"range":"73","text":"72"},[594,596],"[stairsRef]",[1612,1614]]