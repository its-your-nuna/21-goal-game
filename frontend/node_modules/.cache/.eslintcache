[{"/home/aidana/Game/games/21goal/frontend/src/index.js":"1","/home/aidana/Game/games/21goal/frontend/src/App.js":"2","/home/aidana/Game/games/21goal/frontend/src/components/main/MainPage.js":"3","/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx":"4","/home/aidana/Game/games/21goal/frontend/src/components/tasks/Tasks.jsx":"5","/home/aidana/Game/games/21goal/frontend/src/components/stair/Stair.js":"6","/home/aidana/Game/games/21goal/frontend/src/components/Context.js":"7","/home/aidana/Game/games/21goal/frontend/src/components/main/CountDownTimer.js":"8","/home/aidana/Game/games/21goal/frontend/src/components/home/Homepage.jsx":"9"},{"size":257,"mtime":1657183494985,"results":"10","hashOfConfig":"11"},{"size":174,"mtime":1658481421936,"results":"12","hashOfConfig":"11"},{"size":2722,"mtime":1658985161134,"results":"13","hashOfConfig":"11"},{"size":1457,"mtime":1658920873281,"results":"14","hashOfConfig":"11"},{"size":5211,"mtime":1658928392133,"results":"15","hashOfConfig":"11"},{"size":1881,"mtime":1658921766076,"results":"16","hashOfConfig":"11"},{"size":85,"mtime":1657533346279,"results":"17","hashOfConfig":"11"},{"size":1154,"mtime":1658308362193,"results":"18","hashOfConfig":"11"},{"size":100,"mtime":1658480310572,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"1mt9ggw",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aidana/Game/games/21goal/frontend/src/index.js",["51"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport $ from 'jquery';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n",[],"/home/aidana/Game/games/21goal/frontend/src/App.js",[],[],"/home/aidana/Game/games/21goal/frontend/src/components/main/MainPage.js",["52","53","54"],[],"/home/aidana/Game/games/21goal/frontend/src/components/chibi/Chibi.jsx",["55","56","57"],[],"import React, {Suspense, useState, useRef, useEffect } from 'react'\nimport cat from './astro.png'\nimport { animated, useSpring } from \"react-spring\";\n\nexport const Chibi = (props) => {\n  const {stairsRef,tasksDone, daysCount,savedDay,id} = props\n\n  const catRef = useRef(null);\n  const [catRect, setCatRect] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n  useEffect(() => {\n    const div = stairsRef.current;\n    const rect = div.getBoundingClientRect();\n    setCatRect({\n      x: rect.x,\n      y: rect.y,\n      z: rect.z,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    })\n  }, [])\n  const { width, height } = catRect\n  let days=savedDay\n\n  if(tasksDone){\n    days=daysCount                                                                                                                                 \n  }else{\n    days=savedDay\n  }\n  \n  const springProps = useSpring({\n    from: { bottom: height * days + 'px', left: width * days + 'px', width: '120px', height: '150px', position: 'relative' },\n    to: async next => {\n      await next({ bottom: height * days +150 + 'px', left: width * days + 'px' })\n      await next({ bottom: height * days + 90 + 'px', left: width * days + width / 2 + 'px' })\n    },\n    config: { duration: 500 }\n  });\n\n  return (\n    <>\n      <animated.img\n        ref={catRef}\n        src={cat}\n        alt={'cat'}\n        style={\n          springProps\n        } />\n    </>\n  )\n}\n","/home/aidana/Game/games/21goal/frontend/src/components/tasks/Tasks.jsx",["58","59","60","61","62"],[],"/home/aidana/Game/games/21goal/frontend/src/components/stair/Stair.js",["63","64","65","66","67","68","69"],[],"import React, { useEffect, useState } from 'react'\nimport './Stair.scss'\nimport { useContext } from 'react'\nimport live from '../../images/heart.png'\nimport gift from '../../images/gift.png'\nimport prize from '../../images/prize.png'\nimport { TaskContext } from '../Context'\n\n\nexport const Stair = ({stairsRef,isClicked,taskDone,savedDay}) => {\n    const stairsCount = 23\n    const { setIsClicked} = useContext(TaskContext)\n    const { setId} = useContext(TaskContext)\n    const clickHeart = (i)=>{\n        setId(i)\n        setIsClicked(!isClicked)\n    }\n    \n  return (\n    <>\n    <img className='gift' src={gift} alt='image'/>\n     <div className=\"stairs\" >\n        <div className=\"base\"> </div>\n        \n            <div className={`${taskDone? 'step-taskDone': 'step'}`}\n            ref={stairsRef}\n            style = {{\"--j\":1}}>\n                <i ><img onClick={\n                    ()=>{setIsClicked(!isClicked)}\n                    } \n                    style={{width:'75px',margin:'0px'}}\n                     src={live}/></i>\n                <i></i>\n            </div>\n            {\n            [...Array(stairsCount)].map((e, i) => \n            (i!==0)? \n            <div className='step'\n                key={i}\n                style = {{\"--j\":i}}>\n                    <i >\n                      <div className='con'>\n                      <img onClick={\n                        ()=>{\n                            clickHeart(i)\n                        }\n                        } \n                        className={`${savedDay==taskDone? 'live-taskDone': 'live'}`}\n                        key={i}\n                        src={live}/>\n                        <p>{i}</p>\n                        </div>\n                        </i>\n                    <i></i>\n                </div>:''\n            )}\n     </div>\n     <img className='prize' src={prize}/>\n    </>\n  )\n}\n","/home/aidana/Game/games/21goal/frontend/src/components/Context.js",[],[],"/home/aidana/Game/games/21goal/frontend/src/components/main/CountDownTimer.js",[],[],"/home/aidana/Game/games/21goal/frontend/src/components/home/Homepage.jsx",[],[],{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":9},{"ruleId":"70","severity":1,"message":"74","line":20,"column":10,"nodeType":"72","messageId":"73","endLine":20,"endColumn":24},{"ruleId":"70","severity":1,"message":"75","line":20,"column":25,"nodeType":"72","messageId":"73","endLine":20,"endColumn":42},{"ruleId":"76","severity":1,"message":"77","line":26,"column":23,"nodeType":"78","endLine":26,"endColumn":25},{"ruleId":"70","severity":1,"message":"79","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":24},{"ruleId":"70","severity":1,"message":"80","line":6,"column":50,"nodeType":"72","messageId":"73","endLine":6,"endColumn":52},{"ruleId":"76","severity":1,"message":"81","line":26,"column":6,"nodeType":"82","endLine":26,"endColumn":8,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"84","line":5,"column":16,"nodeType":"72","messageId":"73","endLine":5,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":82,"column":45,"nodeType":"87","messageId":"88","endLine":82,"endColumn":46,"fix":"89"},{"ruleId":"76","severity":1,"message":"81","line":99,"column":6,"nodeType":"82","endLine":99,"endColumn":8,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":101,"column":15,"nodeType":"87","endLine":101,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":149,"column":21,"nodeType":"94","endLine":149,"endColumn":89},{"ruleId":"70","severity":1,"message":"95","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"96","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":21,"column":5,"nodeType":"94","endLine":21,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":28,"column":21,"nodeType":"94","endLine":32,"endColumn":34},{"ruleId":"92","severity":1,"message":"93","line":43,"column":23,"nodeType":"94","endLine":50,"endColumn":37},{"ruleId":"99","severity":1,"message":"100","line":48,"column":47,"nodeType":"101","messageId":"102","endLine":48,"endColumn":49},{"ruleId":"92","severity":1,"message":"93","line":58,"column":6,"nodeType":"94","endLine":58,"endColumn":42},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'savedTasksDone' is assigned a value but never used.","'setSavedTasksDone' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'count' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'Suspense' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'stairsRef'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'myId' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"104","text":"105"},["106"],"Assignments to the 'element' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"107","fix":"108"},[2130,2138],"\n      .",{"desc":"107","fix":"109"},"Update the dependencies array to be: [stairsRef]",{"range":"110","text":"111"},{"range":"112","text":"111"},[629,631],"[stairsRef]",[2486,2488]]